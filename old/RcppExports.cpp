// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// loc2idx
std::vector<int64_t> loc2idx(const std::vector<std::vector<int64_t>>& locations, const std::vector<int64_t>& dim);
RcppExport SEXP _farray_loc2idx(SEXP locationsSEXP, SEXP dimSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::vector<std::vector<int64_t>>& >::type locations(locationsSEXP);
    Rcpp::traits::input_parameter< const std::vector<int64_t>& >::type dim(dimSEXP);
    rcpp_result_gen = Rcpp::wrap(loc2idx(locations, dim));
    return rcpp_result_gen;
END_RCPP
}
// listOrEnv2Idx2
std::vector<std::vector<int64_t>> listOrEnv2Idx2(SEXP listOrEnv, std::vector<int64_t> dim, std::vector<int64_t> bDim);
RcppExport SEXP _farray_listOrEnv2Idx2(SEXP listOrEnvSEXP, SEXP dimSEXP, SEXP bDimSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type listOrEnv(listOrEnvSEXP);
    Rcpp::traits::input_parameter< std::vector<int64_t> >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< std::vector<int64_t> >::type bDim(bDimSEXP);
    rcpp_result_gen = Rcpp::wrap(listOrEnv2Idx2(listOrEnv, dim, bDim));
    return rcpp_result_gen;
END_RCPP
}
// uniqueIndexSet
std::vector<int64_t> uniqueIndexSet(const std::vector<int64_t>& idx);
RcppExport SEXP _farray_uniqueIndexSet(SEXP idxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::vector<int64_t>& >::type idx(idxSEXP);
    rcpp_result_gen = Rcpp::wrap(uniqueIndexSet(idx));
    return rcpp_result_gen;
END_RCPP
}
// farray_subset
SEXP farray_subset(const std::string rootPath, const std::vector<int64_t> dim, const std::vector<int64_t> bDim, const SEXPTYPE dType, SEXP listOrEnv);
RcppExport SEXP _farray_farray_subset(SEXP rootPathSEXP, SEXP dimSEXP, SEXP bDimSEXP, SEXP dTypeSEXP, SEXP listOrEnvSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string >::type rootPath(rootPathSEXP);
    Rcpp::traits::input_parameter< const std::vector<int64_t> >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< const std::vector<int64_t> >::type bDim(bDimSEXP);
    Rcpp::traits::input_parameter< const SEXPTYPE >::type dType(dTypeSEXP);
    Rcpp::traits::input_parameter< SEXP >::type listOrEnv(listOrEnvSEXP);
    rcpp_result_gen = Rcpp::wrap(farray_subset(rootPath, dim, bDim, dType, listOrEnv));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_farray_loc2idx", (DL_FUNC) &_farray_loc2idx, 2},
    {"_farray_listOrEnv2Idx2", (DL_FUNC) &_farray_listOrEnv2Idx2, 3},
    {"_farray_uniqueIndexSet", (DL_FUNC) &_farray_uniqueIndexSet, 1},
    {"_farray_farray_subset", (DL_FUNC) &_farray_farray_subset, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_farray(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
